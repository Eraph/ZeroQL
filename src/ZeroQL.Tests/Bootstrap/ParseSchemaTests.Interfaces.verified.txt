{
  figureInterface:
    [System.CodeDom.Compiler.GeneratedCode ( "ZeroQL" ,  "1.0.0.0" )]
    public interface IFigure : global::ZeroQL.IUnionType
    {
        [ZeroQL.GraphQLName("id")]
        [JsonPropertyName("id")]
        public int? Id { get; set; }

        [ZeroQL.GraphQLName("perimeter")]
        [JsonPropertyName("perimeter")]
        public double Perimeter { get; set; }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never), JsonPropertyName("creator")]
        public User __Creator { get; set; }

        [ZeroQL.GraphQLName("creator")]
        public T Creator<T>(Func<User, T> selector = default !);
    }
,
  figureStubInterface:
    [System.CodeDom.Compiler.GeneratedCode ( "ZeroQL" ,  "1.0.0.0" )]
    public class IFigureStub : IFigure
    {
        [ZeroQL.GraphQLName("id")]
        [JsonPropertyName("id")]
        public int? Id { get; set; }

        [ZeroQL.GraphQLName("perimeter")]
        [JsonPropertyName("perimeter")]
        public double Perimeter { get; set; }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never), JsonPropertyName("creator")]
        public User __Creator { get; set; }

        [ZeroQL.GraphQLName("creator")]
        public T Creator<T>(Func<User, T> selector = default !)
        {
            return __Creator is null ? throw new NullReferenceException("Creator is null but it should not be null. Schema can be outdated.") : selector(__Creator);
        }
    }
,
  squareClass:
    [ZeroQL.GraphQLType("Square")]
    [System.CodeDom.Compiler.GeneratedCode ( "ZeroQL" ,  "1.0.0.0" )]
    public class Square : IFigure
    {
        [ZeroQL.GraphQLName("id")]
        [JsonPropertyName("id")]
        public int? Id { get; set; }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never), JsonPropertyName("topLeft")]
        public Point __TopLeft { get; set; }

        [ZeroQL.GraphQLName("topLeft")]
        public T TopLeft<T>(Func<Point, T> selector = default !)
        {
            return __TopLeft is null ? throw new NullReferenceException("TopLeft is null but it should not be null. Schema can be outdated.") : selector(__TopLeft);
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never), JsonPropertyName("bottomRight")]
        public Point __BottomRight { get; set; }

        [ZeroQL.GraphQLName("bottomRight")]
        public T BottomRight<T>(Func<Point, T> selector = default !)
        {
            return __BottomRight is null ? throw new NullReferenceException("BottomRight is null but it should not be null. Schema can be outdated.") : selector(__BottomRight);
        }

        [ZeroQL.GraphQLName("perimeter")]
        [JsonPropertyName("perimeter")]
        public double Perimeter { get; set; }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never), JsonPropertyName("creator")]
        public User __Creator { get; set; }

        [ZeroQL.GraphQLName("creator")]
        public T Creator<T>(Func<User, T> selector = default !)
        {
            return __Creator is null ? throw new NullReferenceException("Creator is null but it should not be null. Schema can be outdated.") : selector(__Creator);
        }
    }
,
  circleClass:
    [ZeroQL.GraphQLType("Circle")]
    [System.CodeDom.Compiler.GeneratedCode ( "ZeroQL" ,  "1.0.0.0" )]
    public class Circle : IFigure
    {
        [ZeroQL.GraphQLName("id")]
        [JsonPropertyName("id")]
        public int? Id { get; set; }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never), JsonPropertyName("center")]
        public Point __Center { get; set; }

        [ZeroQL.GraphQLName("center")]
        public T Center<T>(Func<Point, T> selector = default !)
        {
            return __Center is null ? throw new NullReferenceException("Center is null but it should not be null. Schema can be outdated.") : selector(__Center);
        }

        [ZeroQL.GraphQLName("radius")]
        [JsonPropertyName("radius")]
        public double Radius { get; set; }

        [ZeroQL.GraphQLName("perimeter")]
        [JsonPropertyName("perimeter")]
        public double Perimeter { get; set; }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never), JsonPropertyName("creator")]
        public User __Creator { get; set; }

        [ZeroQL.GraphQLName("creator")]
        public T Creator<T>(Func<User, T> selector = default !)
        {
            return __Creator is null ? throw new NullReferenceException("Creator is null but it should not be null. Schema can be outdated.") : selector(__Creator);
        }
    }
,
  point:
    [ZeroQL.GraphQLType("Point")]
    [System.CodeDom.Compiler.GeneratedCode ( "ZeroQL" ,  "1.0.0.0" )]
    public class Point : IFigure
    {
        [ZeroQL.GraphQLName("id")]
        [JsonPropertyName("id")]
        public int Id { get; set; }

        [JsonIgnore]
        int? IFigure.Id { get; set; }

        [ZeroQL.GraphQLName("x")]
        [JsonPropertyName("x")]
        public double X { get; set; }

        [ZeroQL.GraphQLName("y")]
        [JsonPropertyName("y")]
        public double Y { get; set; }

        [ZeroQL.GraphQLName("perimeter")]
        [JsonPropertyName("perimeter")]
        public double Perimeter { get; set; }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never), JsonPropertyName("creator")]
        public User __Creator { get; set; }

        [ZeroQL.GraphQLName("creator")]
        public T Creator<T>(Func<User, T> selector = default !)
        {
            return __Creator is null ? throw new NullReferenceException("Creator is null but it should not be null. Schema can be outdated.") : selector(__Creator);
        }
    }
,
  converter:
    internal class ZeroQLIFigureConverter : InterfaceJsonConverter<IFigure?>
    {
        public override IFigure? Deserialize(string typeName, JsonObject json) => typeName switch
        {
            "Circle" => json.Deserialize<Circle>(ZeroQLJsonOptions.Options),
            "Point" => json.Deserialize<Point>(ZeroQLJsonOptions.Options),
            "Square" => json.Deserialize<Square>(ZeroQLJsonOptions.Options),
            _ => json.Deserialize<IFigureStub>(ZeroQLJsonOptions.Options)};
    }
,
  initializers:
    internal static class JsonConvertersInitializers
    {
        [global::System.Runtime.CompilerServices.ModuleInitializer]
        public static void Init()
        {
            global::ZeroQL.Json.ZeroQLJsonSerializersStore.Converters[typeof(global::TestApp.IFigure)] = new ZeroQLIFigureConverter();
        }
    }

}